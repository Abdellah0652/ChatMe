{"ast":null,"code":"import { find } from 'linkifyjs';\nimport { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nimport { useChannelStateContext, useChatContext } from '../../../context';\nimport { LinkPreviewState, SetLinkPreviewMode } from '../types';\nexport const useLinkPreviews = ({\n  debounceURLEnrichmentMs: debounceURLEnrichmentMsInputContext,\n  dispatch,\n  enrichURLForPreview = false,\n  findURLFn: findURLFnInputContext,\n  linkPreviews,\n  onLinkPreviewDismissed: onLinkPreviewDismissedInputContext\n}) => {\n  const {\n    client\n  } = useChatContext();\n  // FIXME: the value of channelConfig is stale due to omitting it from the memoization deps in useCreateChannelStateContext\n  const {\n    channelConfig,\n    debounceURLEnrichmentMs: debounceURLEnrichmentMsChannelContext,\n    findURLFn: findURLFnChannelContext,\n    onLinkPreviewDismissed: onLinkPreviewDismissedChannelContext\n  } = useChannelStateContext();\n  const shouldDiscardEnrichQueries = useRef(false);\n  const findURLFn = findURLFnInputContext ?? findURLFnChannelContext;\n  const onLinkPreviewDismissed = onLinkPreviewDismissedInputContext ?? onLinkPreviewDismissedChannelContext;\n  const debounceURLEnrichmentMs = debounceURLEnrichmentMsInputContext ?? debounceURLEnrichmentMsChannelContext ?? 1500;\n  const dismissLinkPreview = useCallback(linkPreview => {\n    onLinkPreviewDismissed?.(linkPreview);\n    const previewToRemoveMap = new Map();\n    linkPreview.state = LinkPreviewState.DISMISSED;\n    previewToRemoveMap.set(linkPreview.og_scrape_url, linkPreview);\n    dispatch({\n      linkPreviews: previewToRemoveMap,\n      mode: SetLinkPreviewMode.UPSERT,\n      type: 'setLinkPreviews'\n    });\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [onLinkPreviewDismissed]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const findAndEnqueueURLsToEnrich = useCallback(debounce((text, mode = SetLinkPreviewMode.SET) => {\n    const urls = findURLFn ? findURLFn(text) : find(text, 'url').reduce((acc, link) => {\n      if (link.isLink) acc.push(link.href);\n      return acc;\n    }, []);\n    shouldDiscardEnrichQueries.current = urls.length === 0;\n    dispatch({\n      linkPreviews: urls.reduce((acc, url) => {\n        acc.set(url, {\n          og_scrape_url: url,\n          state: LinkPreviewState.QUEUED\n        });\n        return acc;\n      }, new Map()),\n      mode,\n      type: 'setLinkPreviews'\n    });\n  }, debounceURLEnrichmentMs, {\n    leading: false,\n    trailing: true\n  }), [debounceURLEnrichmentMs, shouldDiscardEnrichQueries, findURLFn]);\n  const cancelURLEnrichment = useCallback(() => {\n    findAndEnqueueURLsToEnrich.cancel();\n    findAndEnqueueURLsToEnrich('');\n    findAndEnqueueURLsToEnrich.flush();\n  }, [findAndEnqueueURLsToEnrich]);\n  useEffect(() => {\n    const enqueuedLinks = Array.from(linkPreviews.values()).reduce((acc, linkPreview) => {\n      if (linkPreview.state === 'queued') {\n        const loadingLinkPreview = {\n          ...linkPreview,\n          state: LinkPreviewState.LOADING\n        };\n        acc.set(linkPreview.og_scrape_url, loadingLinkPreview);\n      }\n      return acc;\n    }, new Map());\n    if (!enqueuedLinks.size) return;\n    dispatch({\n      linkPreviews: enqueuedLinks,\n      mode: SetLinkPreviewMode.UPSERT,\n      type: 'setLinkPreviews'\n    });\n    enqueuedLinks.forEach(linkPreview => {\n      client.enrichURL(linkPreview.og_scrape_url)\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .then(({\n        duration,\n        ...ogAttachment\n      }) => {\n        if (shouldDiscardEnrichQueries.current) return;\n        const linkPreviewsMap = new Map();\n        linkPreviewsMap.set(linkPreview.og_scrape_url, {\n          ...ogAttachment,\n          state: LinkPreviewState.LOADED\n        });\n        dispatch({\n          linkPreviews: linkPreviewsMap,\n          mode: SetLinkPreviewMode.UPSERT,\n          type: 'setLinkPreviews'\n        });\n      }).catch(() => {\n        const linkPreviewsMap = new Map();\n        linkPreviewsMap.set(linkPreview.og_scrape_url, {\n          ...linkPreview,\n          state: LinkPreviewState.FAILED\n        });\n        dispatch({\n          linkPreviews: linkPreviewsMap,\n          mode: SetLinkPreviewMode.UPSERT,\n          type: 'setLinkPreviews'\n        });\n      });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shouldDiscardEnrichQueries, linkPreviews]);\n  return {\n    cancelURLEnrichment,\n    dismissLinkPreview,\n    findAndEnqueueURLsToEnrich: channelConfig?.url_enrichment && enrichURLForPreview ? findAndEnqueueURLsToEnrich : undefined\n  };\n};","map":{"version":3,"names":["find","useCallback","useEffect","useRef","debounce","useChannelStateContext","useChatContext","LinkPreviewState","SetLinkPreviewMode","useLinkPreviews","debounceURLEnrichmentMs","debounceURLEnrichmentMsInputContext","dispatch","enrichURLForPreview","findURLFn","findURLFnInputContext","linkPreviews","onLinkPreviewDismissed","onLinkPreviewDismissedInputContext","client","channelConfig","debounceURLEnrichmentMsChannelContext","findURLFnChannelContext","onLinkPreviewDismissedChannelContext","shouldDiscardEnrichQueries","dismissLinkPreview","linkPreview","previewToRemoveMap","Map","state","DISMISSED","set","og_scrape_url","mode","UPSERT","type","findAndEnqueueURLsToEnrich","text","SET","urls","reduce","acc","link","isLink","push","href","current","length","url","QUEUED","leading","trailing","cancelURLEnrichment","cancel","flush","enqueuedLinks","Array","from","values","loadingLinkPreview","LOADING","size","forEach","enrichURL","then","duration","ogAttachment","linkPreviewsMap","LOADED","catch","FAILED","url_enrichment","undefined"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useLinkPreviews.js"],"sourcesContent":["import { find } from 'linkifyjs';\nimport { useCallback, useEffect, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nimport { useChannelStateContext, useChatContext } from '../../../context';\nimport { LinkPreviewState, SetLinkPreviewMode } from '../types';\nexport const useLinkPreviews = ({ debounceURLEnrichmentMs: debounceURLEnrichmentMsInputContext, dispatch, enrichURLForPreview = false, findURLFn: findURLFnInputContext, linkPreviews, onLinkPreviewDismissed: onLinkPreviewDismissedInputContext, }) => {\n    const { client } = useChatContext();\n    // FIXME: the value of channelConfig is stale due to omitting it from the memoization deps in useCreateChannelStateContext\n    const { channelConfig, debounceURLEnrichmentMs: debounceURLEnrichmentMsChannelContext, findURLFn: findURLFnChannelContext, onLinkPreviewDismissed: onLinkPreviewDismissedChannelContext, } = useChannelStateContext();\n    const shouldDiscardEnrichQueries = useRef(false);\n    const findURLFn = findURLFnInputContext ?? findURLFnChannelContext;\n    const onLinkPreviewDismissed = onLinkPreviewDismissedInputContext ?? onLinkPreviewDismissedChannelContext;\n    const debounceURLEnrichmentMs = debounceURLEnrichmentMsInputContext ?? debounceURLEnrichmentMsChannelContext ?? 1500;\n    const dismissLinkPreview = useCallback((linkPreview) => {\n        onLinkPreviewDismissed?.(linkPreview);\n        const previewToRemoveMap = new Map();\n        linkPreview.state = LinkPreviewState.DISMISSED;\n        previewToRemoveMap.set(linkPreview.og_scrape_url, linkPreview);\n        dispatch({\n            linkPreviews: previewToRemoveMap,\n            mode: SetLinkPreviewMode.UPSERT,\n            type: 'setLinkPreviews',\n        });\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [onLinkPreviewDismissed]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const findAndEnqueueURLsToEnrich = useCallback(debounce((text, mode = SetLinkPreviewMode.SET) => {\n        const urls = findURLFn\n            ? findURLFn(text)\n            : find(text, 'url').reduce((acc, link) => {\n                if (link.isLink)\n                    acc.push(link.href);\n                return acc;\n            }, []);\n        shouldDiscardEnrichQueries.current = urls.length === 0;\n        dispatch({\n            linkPreviews: urls.reduce((acc, url) => {\n                acc.set(url, { og_scrape_url: url, state: LinkPreviewState.QUEUED });\n                return acc;\n            }, new Map()),\n            mode,\n            type: 'setLinkPreviews',\n        });\n    }, debounceURLEnrichmentMs, { leading: false, trailing: true }), [debounceURLEnrichmentMs, shouldDiscardEnrichQueries, findURLFn]);\n    const cancelURLEnrichment = useCallback(() => {\n        findAndEnqueueURLsToEnrich.cancel();\n        findAndEnqueueURLsToEnrich('');\n        findAndEnqueueURLsToEnrich.flush();\n    }, [findAndEnqueueURLsToEnrich]);\n    useEffect(() => {\n        const enqueuedLinks = Array.from(linkPreviews.values()).reduce((acc, linkPreview) => {\n            if (linkPreview.state === 'queued') {\n                const loadingLinkPreview = {\n                    ...linkPreview,\n                    state: LinkPreviewState.LOADING,\n                };\n                acc.set(linkPreview.og_scrape_url, loadingLinkPreview);\n            }\n            return acc;\n        }, new Map());\n        if (!enqueuedLinks.size)\n            return;\n        dispatch({\n            linkPreviews: enqueuedLinks,\n            mode: SetLinkPreviewMode.UPSERT,\n            type: 'setLinkPreviews',\n        });\n        enqueuedLinks.forEach((linkPreview) => {\n            client\n                .enrichURL(linkPreview.og_scrape_url)\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                .then(({ duration, ...ogAttachment }) => {\n                if (shouldDiscardEnrichQueries.current)\n                    return;\n                const linkPreviewsMap = new Map();\n                linkPreviewsMap.set(linkPreview.og_scrape_url, {\n                    ...ogAttachment,\n                    state: LinkPreviewState.LOADED,\n                });\n                dispatch({\n                    linkPreviews: linkPreviewsMap,\n                    mode: SetLinkPreviewMode.UPSERT,\n                    type: 'setLinkPreviews',\n                });\n            })\n                .catch(() => {\n                const linkPreviewsMap = new Map();\n                linkPreviewsMap.set(linkPreview.og_scrape_url, {\n                    ...linkPreview,\n                    state: LinkPreviewState.FAILED,\n                });\n                dispatch({\n                    linkPreviews: linkPreviewsMap,\n                    mode: SetLinkPreviewMode.UPSERT,\n                    type: 'setLinkPreviews',\n                });\n            });\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shouldDiscardEnrichQueries, linkPreviews]);\n    return {\n        cancelURLEnrichment,\n        dismissLinkPreview,\n        findAndEnqueueURLsToEnrich: channelConfig?.url_enrichment && enrichURLForPreview ? findAndEnqueueURLsToEnrich : undefined,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}