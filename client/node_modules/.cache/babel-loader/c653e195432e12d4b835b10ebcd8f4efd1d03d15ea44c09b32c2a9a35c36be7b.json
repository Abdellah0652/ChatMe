{"ast":null,"code":"import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslationContext } from '../../../context';\nimport { MediaRecorderController } from '../classes';\nexport const useMediaRecorder = ({\n  asyncMessagesMultiSendEnabled,\n  enabled,\n  generateRecordingTitle,\n  handleSubmit,\n  recordingConfig,\n  uploadAttachment\n}) => {\n  const {\n    t\n  } = useTranslationContext('useMediaRecorder');\n  const [recording, setRecording] = useState();\n  const [recordingState, setRecordingState] = useState();\n  const [permissionState, setPermissionState] = useState();\n  const [isScheduledForSubmit, scheduleForSubmit] = useState(false);\n  const recorder = useMemo(() => enabled ? new MediaRecorderController({\n    config: recordingConfig ?? {},\n    generateRecordingTitle,\n    t\n  }) : undefined, [recordingConfig, enabled, generateRecordingTitle, t]);\n  const completeRecording = useCallback(async () => {\n    if (!recorder) return;\n    const recording = await recorder.stop();\n    if (!recording) return;\n    await uploadAttachment(recording);\n    if (!asyncMessagesMultiSendEnabled) {\n      // FIXME: cannot call handleSubmit() directly as the function has stale reference to attachments\n      scheduleForSubmit(true);\n    }\n    recorder.cleanUp();\n  }, [asyncMessagesMultiSendEnabled, recorder, uploadAttachment]);\n  useEffect(() => {\n    if (!isScheduledForSubmit) return;\n    handleSubmit();\n    scheduleForSubmit(false);\n  }, [handleSubmit, isScheduledForSubmit]);\n  useEffect(() => {\n    if (!recorder) return;\n    recorder.permission.watch();\n    const recordingSubscription = recorder.recording.subscribe(setRecording);\n    const recordingStateSubscription = recorder.recordingState.subscribe(setRecordingState);\n    const permissionStateSubscription = recorder.permission.state.subscribe(setPermissionState);\n    return () => {\n      recorder.cancel();\n      recorder.permission.unwatch();\n      recordingSubscription.unsubscribe();\n      recordingStateSubscription.unsubscribe();\n      permissionStateSubscription.unsubscribe();\n    };\n  }, [recorder]);\n  return {\n    completeRecording,\n    permissionState,\n    recorder,\n    recording,\n    recordingState\n  };\n};","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","useTranslationContext","MediaRecorderController","useMediaRecorder","asyncMessagesMultiSendEnabled","enabled","generateRecordingTitle","handleSubmit","recordingConfig","uploadAttachment","t","recording","setRecording","recordingState","setRecordingState","permissionState","setPermissionState","isScheduledForSubmit","scheduleForSubmit","recorder","config","undefined","completeRecording","stop","cleanUp","permission","watch","recordingSubscription","subscribe","recordingStateSubscription","permissionStateSubscription","state","cancel","unwatch","unsubscribe"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MediaRecorder/hooks/useMediaRecorder.js"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslationContext } from '../../../context';\nimport { MediaRecorderController, } from '../classes';\nexport const useMediaRecorder = ({ asyncMessagesMultiSendEnabled, enabled, generateRecordingTitle, handleSubmit, recordingConfig, uploadAttachment, }) => {\n    const { t } = useTranslationContext('useMediaRecorder');\n    const [recording, setRecording] = useState();\n    const [recordingState, setRecordingState] = useState();\n    const [permissionState, setPermissionState] = useState();\n    const [isScheduledForSubmit, scheduleForSubmit] = useState(false);\n    const recorder = useMemo(() => enabled\n        ? new MediaRecorderController({\n            config: recordingConfig ?? {},\n            generateRecordingTitle,\n            t,\n        })\n        : undefined, [recordingConfig, enabled, generateRecordingTitle, t]);\n    const completeRecording = useCallback(async () => {\n        if (!recorder)\n            return;\n        const recording = await recorder.stop();\n        if (!recording)\n            return;\n        await uploadAttachment(recording);\n        if (!asyncMessagesMultiSendEnabled) {\n            // FIXME: cannot call handleSubmit() directly as the function has stale reference to attachments\n            scheduleForSubmit(true);\n        }\n        recorder.cleanUp();\n    }, [asyncMessagesMultiSendEnabled, recorder, uploadAttachment]);\n    useEffect(() => {\n        if (!isScheduledForSubmit)\n            return;\n        handleSubmit();\n        scheduleForSubmit(false);\n    }, [handleSubmit, isScheduledForSubmit]);\n    useEffect(() => {\n        if (!recorder)\n            return;\n        recorder.permission.watch();\n        const recordingSubscription = recorder.recording.subscribe(setRecording);\n        const recordingStateSubscription = recorder.recordingState.subscribe(setRecordingState);\n        const permissionStateSubscription = recorder.permission.state.subscribe(setPermissionState);\n        return () => {\n            recorder.cancel();\n            recorder.permission.unwatch();\n            recordingSubscription.unsubscribe();\n            recordingStateSubscription.unsubscribe();\n            permissionStateSubscription.unsubscribe();\n        };\n    }, [recorder]);\n    return {\n        completeRecording,\n        permissionState,\n        recorder,\n        recording,\n        recordingState,\n    };\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACjE,SAASC,qBAAqB,QAAQ,kBAAkB;AACxD,SAASC,uBAAuB,QAAS,YAAY;AACrD,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,6BAA6B;EAAEC,OAAO;EAAEC,sBAAsB;EAAEC,YAAY;EAAEC,eAAe;EAAEC;AAAkB,CAAC,KAAK;EACtJ,MAAM;IAAEC;EAAE,CAAC,GAAGT,qBAAqB,CAAC,kBAAkB,CAAC;EACvD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAC5C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC;EACtD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EACxD,MAAM,CAACiB,oBAAoB,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAMmB,QAAQ,GAAGpB,OAAO,CAAC,MAAMM,OAAO,GAChC,IAAIH,uBAAuB,CAAC;IAC1BkB,MAAM,EAAEZ,eAAe,IAAI,CAAC,CAAC;IAC7BF,sBAAsB;IACtBI;EACJ,CAAC,CAAC,GACAW,SAAS,EAAE,CAACb,eAAe,EAAEH,OAAO,EAAEC,sBAAsB,EAAEI,CAAC,CAAC,CAAC;EACvE,MAAMY,iBAAiB,GAAGzB,WAAW,CAAC,YAAY;IAC9C,IAAI,CAACsB,QAAQ,EACT;IACJ,MAAMR,SAAS,GAAG,MAAMQ,QAAQ,CAACI,IAAI,CAAC,CAAC;IACvC,IAAI,CAACZ,SAAS,EACV;IACJ,MAAMF,gBAAgB,CAACE,SAAS,CAAC;IACjC,IAAI,CAACP,6BAA6B,EAAE;MAChC;MACAc,iBAAiB,CAAC,IAAI,CAAC;IAC3B;IACAC,QAAQ,CAACK,OAAO,CAAC,CAAC;EACtB,CAAC,EAAE,CAACpB,6BAA6B,EAAEe,QAAQ,EAAEV,gBAAgB,CAAC,CAAC;EAC/DX,SAAS,CAAC,MAAM;IACZ,IAAI,CAACmB,oBAAoB,EACrB;IACJV,YAAY,CAAC,CAAC;IACdW,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAACX,YAAY,EAAEU,oBAAoB,CAAC,CAAC;EACxCnB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACqB,QAAQ,EACT;IACJA,QAAQ,CAACM,UAAU,CAACC,KAAK,CAAC,CAAC;IAC3B,MAAMC,qBAAqB,GAAGR,QAAQ,CAACR,SAAS,CAACiB,SAAS,CAAChB,YAAY,CAAC;IACxE,MAAMiB,0BAA0B,GAAGV,QAAQ,CAACN,cAAc,CAACe,SAAS,CAACd,iBAAiB,CAAC;IACvF,MAAMgB,2BAA2B,GAAGX,QAAQ,CAACM,UAAU,CAACM,KAAK,CAACH,SAAS,CAACZ,kBAAkB,CAAC;IAC3F,OAAO,MAAM;MACTG,QAAQ,CAACa,MAAM,CAAC,CAAC;MACjBb,QAAQ,CAACM,UAAU,CAACQ,OAAO,CAAC,CAAC;MAC7BN,qBAAqB,CAACO,WAAW,CAAC,CAAC;MACnCL,0BAA0B,CAACK,WAAW,CAAC,CAAC;MACxCJ,2BAA2B,CAACI,WAAW,CAAC,CAAC;IAC7C,CAAC;EACL,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EACd,OAAO;IACHG,iBAAiB;IACjBP,eAAe;IACfI,QAAQ;IACRR,SAAS;IACTE;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}