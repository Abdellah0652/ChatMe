{"ast":null,"code":"import React from 'react';\nimport { UnsupportedAttachmentPreview as DefaultUnknownAttachmentPreview } from './UnsupportedAttachmentPreview';\nimport { VoiceRecordingPreview as DefaultVoiceRecordingPreview } from './VoiceRecordingPreview';\nimport { FileAttachmentPreview as DefaultFilePreview } from './FileAttachmentPreview';\nimport { ImageAttachmentPreview as DefaultImagePreview } from './ImageAttachmentPreview';\nimport { isLocalAttachment, isLocalAudioAttachment, isLocalFileAttachment, isLocalImageAttachment, isLocalMediaAttachment, isLocalVoiceRecordingAttachment, isScrapedContent } from '../../Attachment';\nimport { useMessageInputContext } from '../../../context';\nexport const AttachmentPreviewList = ({\n  AudioAttachmentPreview = DefaultFilePreview,\n  FileAttachmentPreview = DefaultFilePreview,\n  ImageAttachmentPreview = DefaultImagePreview,\n  UnsupportedAttachmentPreview = DefaultUnknownAttachmentPreview,\n  VideoAttachmentPreview = DefaultFilePreview,\n  VoiceRecordingPreview = DefaultVoiceRecordingPreview\n}) => {\n  const {\n    attachments,\n    removeAttachments,\n    uploadAttachment\n  } = useMessageInputContext('AttachmentPreviewList');\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-list'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-list-scroll-container',\n    \"data-testid\": 'attachment-list-scroll-container'\n  }, attachments.map(attachment => {\n    if (isScrapedContent(attachment)) return null;\n    if (isLocalVoiceRecordingAttachment(attachment)) {\n      return React.createElement(VoiceRecordingPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id || attachment.asset_url,\n        removeAttachments: removeAttachments\n      });\n    } else if (isLocalAudioAttachment(attachment)) {\n      return React.createElement(AudioAttachmentPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id || attachment.asset_url,\n        removeAttachments: removeAttachments\n      });\n    } else if (isLocalMediaAttachment(attachment)) {\n      return React.createElement(VideoAttachmentPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id || attachment.asset_url,\n        removeAttachments: removeAttachments\n      });\n    } else if (isLocalImageAttachment(attachment)) {\n      return React.createElement(ImageAttachmentPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id || attachment.image_url,\n        removeAttachments: removeAttachments\n      });\n    } else if (isLocalFileAttachment(attachment)) {\n      return React.createElement(FileAttachmentPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id || attachment.asset_url,\n        removeAttachments: removeAttachments\n      });\n    } else if (isLocalAttachment(attachment)) {\n      return React.createElement(UnsupportedAttachmentPreview, {\n        attachment: attachment,\n        handleRetry: uploadAttachment,\n        key: attachment.localMetadata.id,\n        removeAttachments: removeAttachments\n      });\n    }\n    return null;\n  })));\n};","map":{"version":3,"names":["React","UnsupportedAttachmentPreview","DefaultUnknownAttachmentPreview","VoiceRecordingPreview","DefaultVoiceRecordingPreview","FileAttachmentPreview","DefaultFilePreview","ImageAttachmentPreview","DefaultImagePreview","isLocalAttachment","isLocalAudioAttachment","isLocalFileAttachment","isLocalImageAttachment","isLocalMediaAttachment","isLocalVoiceRecordingAttachment","isScrapedContent","useMessageInputContext","AttachmentPreviewList","AudioAttachmentPreview","VideoAttachmentPreview","attachments","removeAttachments","uploadAttachment","createElement","className","map","attachment","handleRetry","key","localMetadata","id","asset_url","image_url"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MessageInput/AttachmentPreviewList/AttachmentPreviewList.js"],"sourcesContent":["import React from 'react';\nimport { UnsupportedAttachmentPreview as DefaultUnknownAttachmentPreview, } from './UnsupportedAttachmentPreview';\nimport { VoiceRecordingPreview as DefaultVoiceRecordingPreview, } from './VoiceRecordingPreview';\nimport { FileAttachmentPreview as DefaultFilePreview, } from './FileAttachmentPreview';\nimport { ImageAttachmentPreview as DefaultImagePreview, } from './ImageAttachmentPreview';\nimport { isLocalAttachment, isLocalAudioAttachment, isLocalFileAttachment, isLocalImageAttachment, isLocalMediaAttachment, isLocalVoiceRecordingAttachment, isScrapedContent, } from '../../Attachment';\nimport { useMessageInputContext } from '../../../context';\nexport const AttachmentPreviewList = ({ AudioAttachmentPreview = DefaultFilePreview, FileAttachmentPreview = DefaultFilePreview, ImageAttachmentPreview = DefaultImagePreview, UnsupportedAttachmentPreview = DefaultUnknownAttachmentPreview, VideoAttachmentPreview = DefaultFilePreview, VoiceRecordingPreview = DefaultVoiceRecordingPreview, }) => {\n    const { attachments, removeAttachments, uploadAttachment, } = useMessageInputContext('AttachmentPreviewList');\n    return (React.createElement(\"div\", { className: 'str-chat__attachment-preview-list' },\n        React.createElement(\"div\", { className: 'str-chat__attachment-list-scroll-container', \"data-testid\": 'attachment-list-scroll-container' }, attachments.map((attachment) => {\n            if (isScrapedContent(attachment))\n                return null;\n            if (isLocalVoiceRecordingAttachment(attachment)) {\n                return (React.createElement(VoiceRecordingPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id || attachment.asset_url, removeAttachments: removeAttachments }));\n            }\n            else if (isLocalAudioAttachment(attachment)) {\n                return (React.createElement(AudioAttachmentPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id || attachment.asset_url, removeAttachments: removeAttachments }));\n            }\n            else if (isLocalMediaAttachment(attachment)) {\n                return (React.createElement(VideoAttachmentPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id || attachment.asset_url, removeAttachments: removeAttachments }));\n            }\n            else if (isLocalImageAttachment(attachment)) {\n                return (React.createElement(ImageAttachmentPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id || attachment.image_url, removeAttachments: removeAttachments }));\n            }\n            else if (isLocalFileAttachment(attachment)) {\n                return (React.createElement(FileAttachmentPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id || attachment.asset_url, removeAttachments: removeAttachments }));\n            }\n            else if (isLocalAttachment(attachment)) {\n                return (React.createElement(UnsupportedAttachmentPreview, { attachment: attachment, handleRetry: uploadAttachment, key: attachment.localMetadata.id, removeAttachments: removeAttachments }));\n            }\n            return null;\n        }))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}