{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { CloseIcon } from './icons';\nimport { Attachment as DefaultAttachment } from '../Attachment';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { Poll } from '../Poll';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const QuotedMessagePreviewHeader = () => {\n  const {\n    setQuotedMessage\n  } = useChannelActionContext('QuotedMessagePreview');\n  const {\n    t\n  } = useTranslationContext('QuotedMessagePreview');\n  return React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-preview-header'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-reply-to-message'\n  }, t('Reply to Message')), React.createElement(\"button\", {\n    \"aria-label\": t('aria/Cancel Reply'),\n    className: 'str-chat__quoted-message-remove',\n    onClick: () => setQuotedMessage(undefined)\n  }, React.createElement(CloseIcon, null)));\n};\nexport const QuotedMessagePreview = ({\n  quotedMessage\n}) => {\n  const {\n    client\n  } = useChatContext();\n  const {\n    Attachment = DefaultAttachment,\n    Avatar = DefaultAvatar\n  } = useComponentContext('QuotedMessagePreview');\n  const {\n    userLanguage\n  } = useTranslationContext('QuotedMessagePreview');\n  const quotedMessageText = quotedMessage.i18n?.[`${userLanguage}_text`] || quotedMessage.text;\n  const quotedMessageAttachment = useMemo(() => {\n    const [attachment] = quotedMessage.attachments ?? [];\n    return attachment ? [attachment] : [];\n  }, [quotedMessage.attachments]);\n  if (!quotedMessageText && !quotedMessageAttachment) return null;\n  const poll = quotedMessage.poll_id && client.polls.fromState(quotedMessage.poll_id);\n  return React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-preview',\n    \"data-testid\": 'quoted-message-preview'\n  }, quotedMessage.user && React.createElement(Avatar, {\n    className: 'str-chat__avatar--quoted-message-sender',\n    image: quotedMessage.user.image,\n    name: quotedMessage.user.name || quotedMessage.user.id,\n    user: quotedMessage.user\n  }), React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-bubble'\n  }, poll ? React.createElement(Poll, {\n    isQuoted: true,\n    poll: poll\n  }) : React.createElement(React.Fragment, null, !!quotedMessageAttachment.length && React.createElement(Attachment, {\n    attachments: quotedMessageAttachment,\n    isQuoted: true\n  }), React.createElement(\"div\", {\n    className: 'str-chat__quoted-message-text',\n    \"data-testid\": 'quoted-message-text'\n  }, React.createElement(\"p\", null, quotedMessageText)))));\n};","map":{"version":3,"names":["React","useMemo","CloseIcon","Attachment","DefaultAttachment","Avatar","DefaultAvatar","Poll","useChatContext","useChannelActionContext","useComponentContext","useTranslationContext","QuotedMessagePreviewHeader","setQuotedMessage","t","createElement","className","onClick","undefined","QuotedMessagePreview","quotedMessage","client","userLanguage","quotedMessageText","i18n","text","quotedMessageAttachment","attachment","attachments","poll","poll_id","polls","fromState","user","image","name","id","isQuoted","Fragment","length"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MessageInput/QuotedMessagePreview.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { CloseIcon } from './icons';\nimport { Attachment as DefaultAttachment } from '../Attachment';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { Poll } from '../Poll';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useChannelActionContext } from '../../context/ChannelActionContext';\nimport { useComponentContext } from '../../context/ComponentContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const QuotedMessagePreviewHeader = () => {\n    const { setQuotedMessage } = useChannelActionContext('QuotedMessagePreview');\n    const { t } = useTranslationContext('QuotedMessagePreview');\n    return (React.createElement(\"div\", { className: 'str-chat__quoted-message-preview-header' },\n        React.createElement(\"div\", { className: 'str-chat__quoted-message-reply-to-message' }, t('Reply to Message')),\n        React.createElement(\"button\", { \"aria-label\": t('aria/Cancel Reply'), className: 'str-chat__quoted-message-remove', onClick: () => setQuotedMessage(undefined) },\n            React.createElement(CloseIcon, null))));\n};\nexport const QuotedMessagePreview = ({ quotedMessage, }) => {\n    const { client } = useChatContext();\n    const { Attachment = DefaultAttachment, Avatar = DefaultAvatar, } = useComponentContext('QuotedMessagePreview');\n    const { userLanguage } = useTranslationContext('QuotedMessagePreview');\n    const quotedMessageText = quotedMessage.i18n?.[`${userLanguage}_text`] ||\n        quotedMessage.text;\n    const quotedMessageAttachment = useMemo(() => {\n        const [attachment] = quotedMessage.attachments ?? [];\n        return attachment ? [attachment] : [];\n    }, [quotedMessage.attachments]);\n    if (!quotedMessageText && !quotedMessageAttachment)\n        return null;\n    const poll = quotedMessage.poll_id && client.polls.fromState(quotedMessage.poll_id);\n    return (React.createElement(\"div\", { className: 'str-chat__quoted-message-preview', \"data-testid\": 'quoted-message-preview' },\n        quotedMessage.user && (React.createElement(Avatar, { className: 'str-chat__avatar--quoted-message-sender', image: quotedMessage.user.image, name: quotedMessage.user.name || quotedMessage.user.id, user: quotedMessage.user })),\n        React.createElement(\"div\", { className: 'str-chat__quoted-message-bubble' }, poll ? (React.createElement(Poll, { isQuoted: true, poll: poll })) : (React.createElement(React.Fragment, null,\n            !!quotedMessageAttachment.length && (React.createElement(Attachment, { attachments: quotedMessageAttachment, isQuoted: true })),\n            React.createElement(\"div\", { className: 'str-chat__quoted-message-text', \"data-testid\": 'quoted-message-text' },\n                React.createElement(\"p\", null, quotedMessageText)))))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}