{"ast":null,"code":"import clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useChannelStateContext, useMessageInputContext, useTranslationContext } from '../../context';\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton({\n  onFileChange,\n  resetOnChange = true,\n  ...rest\n}, ref) {\n  const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n  return React.createElement(\"input\", {\n    onChange: handleInputChange,\n    ref: ref,\n    type: 'file',\n    ...rest\n  });\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput({\n  className,\n  onFileChange: onFileChangeCustom,\n  ...props\n}, ref) {\n  const {\n    t\n  } = useTranslationContext('UploadFileInput');\n  const {\n    acceptedFiles = [],\n    multipleUploads\n  } = useChannelStateContext('UploadFileInput');\n  const {\n    isUploadEnabled,\n    maxFilesLeft,\n    uploadNewFiles\n  } = useMessageInputContext('UploadFileInput');\n  const id = useMemo(() => nanoid(), []);\n  const onFileChange = useCallback(files => {\n    uploadNewFiles(files);\n    onFileChangeCustom?.(files);\n  }, [onFileChangeCustom, uploadNewFiles]);\n  return React.createElement(FileInput, {\n    accept: acceptedFiles?.join(','),\n    \"aria-label\": t('aria/File upload'),\n    \"data-testid\": 'file-input',\n    disabled: !isUploadEnabled || maxFilesLeft === 0,\n    id: id,\n    multiple: multipleUploads,\n    ...props,\n    className: clsx('str-chat__file-input', className),\n    onFileChange: onFileChange,\n    ref: ref\n  });\n});","map":{"version":3,"names":["clsx","nanoid","React","forwardRef","useCallback","useMemo","useHandleFileChangeWrapper","useChannelStateContext","useMessageInputContext","useTranslationContext","UploadButton","onFileChange","resetOnChange","rest","ref","handleInputChange","createElement","onChange","type","FileInput","UploadFileInput","className","onFileChangeCustom","props","t","acceptedFiles","multipleUploads","isUploadEnabled","maxFilesLeft","uploadNewFiles","id","files","accept","join","disabled","multiple"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/ReactFileUtilities/UploadButton.js"],"sourcesContent":["import clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useChannelStateContext, useMessageInputContext, useTranslationContext, } from '../../context';\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton({ onFileChange, resetOnChange = true, ...rest }, ref) {\n    const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n    return React.createElement(\"input\", { onChange: handleInputChange, ref: ref, type: 'file', ...rest });\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput({ className, onFileChange: onFileChangeCustom, ...props }, ref) {\n    const { t } = useTranslationContext('UploadFileInput');\n    const { acceptedFiles = [], multipleUploads } = useChannelStateContext('UploadFileInput');\n    const { isUploadEnabled, maxFilesLeft, uploadNewFiles, } = useMessageInputContext('UploadFileInput');\n    const id = useMemo(() => nanoid(), []);\n    const onFileChange = useCallback((files) => {\n        uploadNewFiles(files);\n        onFileChangeCustom?.(files);\n    }, [onFileChangeCustom, uploadNewFiles]);\n    return (React.createElement(FileInput, { accept: acceptedFiles?.join(','), \"aria-label\": t('aria/File upload'), \"data-testid\": 'file-input', disabled: !isUploadEnabled || maxFilesLeft === 0, id: id, multiple: multipleUploads, ...props, className: clsx('str-chat__file-input', className), onFileChange: onFileChange, ref: ref }));\n});\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,UAAU,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC/D,SAASC,0BAA0B,QAAQ,SAAS;AACpD,SAASC,sBAAsB,EAAEC,sBAAsB,EAAEC,qBAAqB,QAAS,eAAe;AACtG;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGP,UAAU,CAAC,SAASO,YAAYA,CAAC;EAAEC,YAAY;EAAEC,aAAa,GAAG,IAAI;EAAE,GAAGC;AAAK,CAAC,EAAEC,GAAG,EAAE;EAC/G,MAAMC,iBAAiB,GAAGT,0BAA0B,CAACM,aAAa,EAAED,YAAY,CAAC;EACjF,OAAOT,KAAK,CAACc,aAAa,CAAC,OAAO,EAAE;IAAEC,QAAQ,EAAEF,iBAAiB;IAAED,GAAG,EAAEA,GAAG;IAAEI,IAAI,EAAE,MAAM;IAAE,GAAGL;EAAK,CAAC,CAAC;AACzG,CAAC,CAAC;AACF,OAAO,MAAMM,SAAS,GAAGT,YAAY;AACrC,OAAO,MAAMU,eAAe,GAAGjB,UAAU,CAAC,SAASiB,eAAeA,CAAC;EAAEC,SAAS;EAAEV,YAAY,EAAEW,kBAAkB;EAAE,GAAGC;AAAM,CAAC,EAAET,GAAG,EAAE;EAC/H,MAAM;IAAEU;EAAE,CAAC,GAAGf,qBAAqB,CAAC,iBAAiB,CAAC;EACtD,MAAM;IAAEgB,aAAa,GAAG,EAAE;IAAEC;EAAgB,CAAC,GAAGnB,sBAAsB,CAAC,iBAAiB,CAAC;EACzF,MAAM;IAAEoB,eAAe;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGrB,sBAAsB,CAAC,iBAAiB,CAAC;EACpG,MAAMsB,EAAE,GAAGzB,OAAO,CAAC,MAAMJ,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACtC,MAAMU,YAAY,GAAGP,WAAW,CAAE2B,KAAK,IAAK;IACxCF,cAAc,CAACE,KAAK,CAAC;IACrBT,kBAAkB,GAAGS,KAAK,CAAC;EAC/B,CAAC,EAAE,CAACT,kBAAkB,EAAEO,cAAc,CAAC,CAAC;EACxC,OAAQ3B,KAAK,CAACc,aAAa,CAACG,SAAS,EAAE;IAAEa,MAAM,EAAEP,aAAa,EAAEQ,IAAI,CAAC,GAAG,CAAC;IAAE,YAAY,EAAET,CAAC,CAAC,kBAAkB,CAAC;IAAE,aAAa,EAAE,YAAY;IAAEU,QAAQ,EAAE,CAACP,eAAe,IAAIC,YAAY,KAAK,CAAC;IAAEE,EAAE,EAAEA,EAAE;IAAEK,QAAQ,EAAET,eAAe;IAAE,GAAGH,KAAK;IAAEF,SAAS,EAAErB,IAAI,CAAC,sBAAsB,EAAEqB,SAAS,CAAC;IAAEV,YAAY,EAAEA,YAAY;IAAEG,GAAG,EAAEA;EAAI,CAAC,CAAC;AAC3U,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}