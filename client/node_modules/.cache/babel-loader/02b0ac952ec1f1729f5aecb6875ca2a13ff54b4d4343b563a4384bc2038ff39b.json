{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nexport const useMessageSetKey = ({\n  messages\n}) => {\n  /**\n   * Logic to update the key of the virtuoso component when the list jumps to a new location.\n   */\n  const [messageSetKey, setMessageSetKey] = useState(+new Date());\n  const firstMessageId = useRef();\n  useEffect(() => {\n    const continuousSet = messages?.find(message => message.id === firstMessageId.current);\n    if (!continuousSet) {\n      setMessageSetKey(+new Date());\n    }\n    firstMessageId.current = messages?.[0]?.id;\n  }, [messages]);\n  return {\n    messageSetKey\n  };\n};","map":{"version":3,"names":["useEffect","useRef","useState","useMessageSetKey","messages","messageSetKey","setMessageSetKey","Date","firstMessageId","continuousSet","find","message","id","current"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useMessageSetKey.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nexport const useMessageSetKey = ({ messages, }) => {\n    /**\n     * Logic to update the key of the virtuoso component when the list jumps to a new location.\n     */\n    const [messageSetKey, setMessageSetKey] = useState(+new Date());\n    const firstMessageId = useRef();\n    useEffect(() => {\n        const continuousSet = messages?.find((message) => message.id === firstMessageId.current);\n        if (!continuousSet) {\n            setMessageSetKey(+new Date());\n        }\n        firstMessageId.current = messages?.[0]?.id;\n    }, [messages]);\n    return {\n        messageSetKey,\n    };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAC/C;AACJ;AACA;EACI,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,CAAC,IAAIK,IAAI,CAAC,CAAC,CAAC;EAC/D,MAAMC,cAAc,GAAGP,MAAM,CAAC,CAAC;EAC/BD,SAAS,CAAC,MAAM;IACZ,MAAMS,aAAa,GAAGL,QAAQ,EAAEM,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,cAAc,CAACK,OAAO,CAAC;IACxF,IAAI,CAACJ,aAAa,EAAE;MAChBH,gBAAgB,CAAC,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IACjC;IACAC,cAAc,CAACK,OAAO,GAAGT,QAAQ,GAAG,CAAC,CAAC,EAAEQ,EAAE;EAC9C,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EACd,OAAO;IACHC;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}