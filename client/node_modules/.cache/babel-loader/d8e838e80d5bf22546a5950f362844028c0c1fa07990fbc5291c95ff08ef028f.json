{"ast":null,"code":"import { DEFAULT_UPLOAD_SIZE_LIMIT_BYTES } from '../../../constants/limits';\nexport const accentsMap = {\n  a: 'á|à|ã|â|À|Á|Ã|Â',\n  c: 'ç|Ç',\n  e: 'é|è|ê|É|È|Ê',\n  i: 'í|ì|î|Í|Ì|Î',\n  n: 'ñ|Ñ',\n  o: 'ó|ò|ô|ő|õ|Ó|Ò|Ô|Õ',\n  u: 'ú|ù|û|ü|Ú|Ù|Û|Ü'\n};\nexport const removeDiacritics = text => {\n  if (!text) return '';\n  return Object.keys(accentsMap).reduce((acc, current) => acc.replace(new RegExp(accentsMap[current], 'g'), current), text);\n};\nexport const calculateLevenshtein = (query, name) => {\n  if (query.length === 0) return name.length;\n  if (name.length === 0) return query.length;\n  const matrix = [];\n  let i;\n  for (i = 0; i <= name.length; i++) {\n    matrix[i] = [i];\n  }\n  let j;\n  for (j = 0; j <= query.length; j++) {\n    matrix[0][j] = j;\n  }\n  for (i = 1; i <= name.length; i++) {\n    for (j = 1; j <= query.length; j++) {\n      if (name.charAt(i - 1) === query.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1,\n        // substitution\n        Math.min(matrix[i][j - 1] + 1,\n        // insertion\n        matrix[i - 1][j] + 1)); // deletion\n      }\n    }\n  }\n  return matrix[name.length][query.length];\n};\nexport const searchLocalUsers = params => {\n  const {\n    ownUserId,\n    query,\n    text,\n    useMentionsTransliteration,\n    users\n  } = params;\n  const matchingUsers = users.filter(user => {\n    if (user.id === ownUserId) return false;\n    if (!query) return true;\n    let updatedId = removeDiacritics(user.id).toLowerCase();\n    let updatedName = removeDiacritics(user.name).toLowerCase();\n    let updatedQuery = removeDiacritics(query).toLowerCase();\n    if (useMentionsTransliteration) {\n      (async () => {\n        const {\n          default: transliterate\n        } = await import('@stream-io/transliterate');\n        updatedName = transliterate(user.name || '').toLowerCase();\n        updatedQuery = transliterate(query).toLowerCase();\n        updatedId = transliterate(user.id).toLowerCase();\n      })();\n    }\n    const maxDistance = 3;\n    const lastDigits = text.slice(-(maxDistance + 1)).includes('@');\n    if (updatedName) {\n      const levenshtein = calculateLevenshtein(updatedQuery, updatedName);\n      if (updatedName.includes(updatedQuery) || levenshtein <= maxDistance && lastDigits) {\n        return true;\n      }\n    }\n    const levenshtein = calculateLevenshtein(updatedQuery, updatedId);\n    return updatedId.includes(updatedQuery) || levenshtein <= maxDistance && lastDigits;\n  });\n  return matchingUsers;\n};\nexport const checkUploadPermissions = async params => {\n  const {\n    addNotification,\n    file,\n    getAppSettings,\n    t,\n    uploadType\n  } = params;\n  let appSettings = null;\n  appSettings = await getAppSettings();\n  const {\n    allowed_file_extensions,\n    allowed_mime_types,\n    blocked_file_extensions,\n    blocked_mime_types,\n    size_limit\n  } = (uploadType === 'image' ? appSettings?.app?.image_upload_config : appSettings?.app?.file_upload_config) || {};\n  const sendNotAllowedErrorNotification = () => addNotification(t(`Upload type: \"{{ type }}\" is not allowed`, {\n    type: file.type || 'unknown type'\n  }), 'error');\n  if (allowed_file_extensions?.length) {\n    const allowed = allowed_file_extensions.some(ext => file.name.toLowerCase().endsWith(ext.toLowerCase()));\n    if (!allowed) {\n      sendNotAllowedErrorNotification();\n      return false;\n    }\n  }\n  if (blocked_file_extensions?.length) {\n    const blocked = blocked_file_extensions.some(ext => file.name.toLowerCase().endsWith(ext.toLowerCase()));\n    if (blocked) {\n      sendNotAllowedErrorNotification();\n      return false;\n    }\n  }\n  if (allowed_mime_types?.length) {\n    const allowed = allowed_mime_types.some(type => type.toLowerCase() === file.type?.toLowerCase());\n    if (!allowed) {\n      sendNotAllowedErrorNotification();\n      return false;\n    }\n  }\n  if (blocked_mime_types?.length) {\n    const blocked = blocked_mime_types.some(type => type.toLowerCase() === file.type?.toLowerCase());\n    if (blocked) {\n      sendNotAllowedErrorNotification();\n      return false;\n    }\n  }\n  const sizeLimit = size_limit || DEFAULT_UPLOAD_SIZE_LIMIT_BYTES;\n  if (file.size && file.size > sizeLimit) {\n    addNotification(t('File is too large: {{ size }}, maximum upload size is {{ limit }}', {\n      limit: prettifyFileSize(sizeLimit),\n      size: prettifyFileSize(file.size)\n    }), 'error');\n    return false;\n  }\n  return true;\n};\nexport function prettifyFileSize(bytes, precision = 3) {\n  const units = ['B', 'kB', 'MB', 'GB'];\n  const exponent = Math.min(Math.floor(Math.log(bytes) / Math.log(1024)), units.length - 1);\n  const mantissa = bytes / 1024 ** exponent;\n  const formattedMantissa = precision === 0 ? Math.round(mantissa).toString() : mantissa.toPrecision(precision);\n  return `${formattedMantissa} ${units[exponent]}`;\n}","map":{"version":3,"names":["DEFAULT_UPLOAD_SIZE_LIMIT_BYTES","accentsMap","a","c","e","i","n","o","u","removeDiacritics","text","Object","keys","reduce","acc","current","replace","RegExp","calculateLevenshtein","query","name","length","matrix","j","charAt","Math","min","searchLocalUsers","params","ownUserId","useMentionsTransliteration","users","matchingUsers","filter","user","id","updatedId","toLowerCase","updatedName","updatedQuery","default","transliterate","maxDistance","lastDigits","slice","includes","levenshtein","checkUploadPermissions","addNotification","file","getAppSettings","t","uploadType","appSettings","allowed_file_extensions","allowed_mime_types","blocked_file_extensions","blocked_mime_types","size_limit","app","image_upload_config","file_upload_config","sendNotAllowedErrorNotification","type","allowed","some","ext","endsWith","blocked","sizeLimit","size","limit","prettifyFileSize","bytes","precision","units","exponent","floor","log","mantissa","formattedMantissa","round","toString","toPrecision"],"sources":["C:/Users/abdel/OneDrive/Desktop/Medical-plager/client/node_modules/stream-chat-react/dist/components/MessageInput/hooks/utils.js"],"sourcesContent":["import { DEFAULT_UPLOAD_SIZE_LIMIT_BYTES } from '../../../constants/limits';\nexport const accentsMap = {\n    a: 'á|à|ã|â|À|Á|Ã|Â',\n    c: 'ç|Ç',\n    e: 'é|è|ê|É|È|Ê',\n    i: 'í|ì|î|Í|Ì|Î',\n    n: 'ñ|Ñ',\n    o: 'ó|ò|ô|ő|õ|Ó|Ò|Ô|Õ',\n    u: 'ú|ù|û|ü|Ú|Ù|Û|Ü',\n};\nexport const removeDiacritics = (text) => {\n    if (!text)\n        return '';\n    return Object.keys(accentsMap).reduce((acc, current) => acc.replace(new RegExp(accentsMap[current], 'g'), current), text);\n};\nexport const calculateLevenshtein = (query, name) => {\n    if (query.length === 0)\n        return name.length;\n    if (name.length === 0)\n        return query.length;\n    const matrix = [];\n    let i;\n    for (i = 0; i <= name.length; i++) {\n        matrix[i] = [i];\n    }\n    let j;\n    for (j = 0; j <= query.length; j++) {\n        matrix[0][j] = j;\n    }\n    for (i = 1; i <= name.length; i++) {\n        for (j = 1; j <= query.length; j++) {\n            if (name.charAt(i - 1) === query.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\n                Math.min(matrix[i][j - 1] + 1, // insertion\n                matrix[i - 1][j] + 1)); // deletion\n            }\n        }\n    }\n    return matrix[name.length][query.length];\n};\nexport const searchLocalUsers = (params) => {\n    const { ownUserId, query, text, useMentionsTransliteration, users } = params;\n    const matchingUsers = users.filter((user) => {\n        if (user.id === ownUserId)\n            return false;\n        if (!query)\n            return true;\n        let updatedId = removeDiacritics(user.id).toLowerCase();\n        let updatedName = removeDiacritics(user.name).toLowerCase();\n        let updatedQuery = removeDiacritics(query).toLowerCase();\n        if (useMentionsTransliteration) {\n            (async () => {\n                const { default: transliterate } = await import('@stream-io/transliterate');\n                updatedName = transliterate(user.name || '').toLowerCase();\n                updatedQuery = transliterate(query).toLowerCase();\n                updatedId = transliterate(user.id).toLowerCase();\n            })();\n        }\n        const maxDistance = 3;\n        const lastDigits = text.slice(-(maxDistance + 1)).includes('@');\n        if (updatedName) {\n            const levenshtein = calculateLevenshtein(updatedQuery, updatedName);\n            if (updatedName.includes(updatedQuery) || (levenshtein <= maxDistance && lastDigits)) {\n                return true;\n            }\n        }\n        const levenshtein = calculateLevenshtein(updatedQuery, updatedId);\n        return updatedId.includes(updatedQuery) || (levenshtein <= maxDistance && lastDigits);\n    });\n    return matchingUsers;\n};\nexport const checkUploadPermissions = async (params) => {\n    const { addNotification, file, getAppSettings, t, uploadType } = params;\n    let appSettings = null;\n    appSettings = await getAppSettings();\n    const { allowed_file_extensions, allowed_mime_types, blocked_file_extensions, blocked_mime_types, size_limit, } = (uploadType === 'image'\n        ? appSettings?.app?.image_upload_config\n        : appSettings?.app?.file_upload_config) || {};\n    const sendNotAllowedErrorNotification = () => addNotification(t(`Upload type: \"{{ type }}\" is not allowed`, { type: file.type || 'unknown type' }), 'error');\n    if (allowed_file_extensions?.length) {\n        const allowed = allowed_file_extensions.some((ext) => file.name.toLowerCase().endsWith(ext.toLowerCase()));\n        if (!allowed) {\n            sendNotAllowedErrorNotification();\n            return false;\n        }\n    }\n    if (blocked_file_extensions?.length) {\n        const blocked = blocked_file_extensions.some((ext) => file.name.toLowerCase().endsWith(ext.toLowerCase()));\n        if (blocked) {\n            sendNotAllowedErrorNotification();\n            return false;\n        }\n    }\n    if (allowed_mime_types?.length) {\n        const allowed = allowed_mime_types.some((type) => type.toLowerCase() === file.type?.toLowerCase());\n        if (!allowed) {\n            sendNotAllowedErrorNotification();\n            return false;\n        }\n    }\n    if (blocked_mime_types?.length) {\n        const blocked = blocked_mime_types.some((type) => type.toLowerCase() === file.type?.toLowerCase());\n        if (blocked) {\n            sendNotAllowedErrorNotification();\n            return false;\n        }\n    }\n    const sizeLimit = size_limit || DEFAULT_UPLOAD_SIZE_LIMIT_BYTES;\n    if (file.size && file.size > sizeLimit) {\n        addNotification(t('File is too large: {{ size }}, maximum upload size is {{ limit }}', {\n            limit: prettifyFileSize(sizeLimit),\n            size: prettifyFileSize(file.size),\n        }), 'error');\n        return false;\n    }\n    return true;\n};\nexport function prettifyFileSize(bytes, precision = 3) {\n    const units = ['B', 'kB', 'MB', 'GB'];\n    const exponent = Math.min(Math.floor(Math.log(bytes) / Math.log(1024)), units.length - 1);\n    const mantissa = bytes / 1024 ** exponent;\n    const formattedMantissa = precision === 0 ? Math.round(mantissa).toString() : mantissa.toPrecision(precision);\n    return `${formattedMantissa} ${units[exponent]}`;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}